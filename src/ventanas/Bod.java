/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;

import bodegaDAO.BodegaDAO;
import oficinaDAO.OficinaDAO;
import java.awt.event.ActionEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import oficinaDAO.OficinaDAO;

/**
 *
 * @author beto
 */
public class Bod extends javax.swing.JFrame {

    /**
     * Creates new form Bod
     */
    public Bod() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buscar = new javax.swing.JButton();
        area = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        buscar.setText("buscar");
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });

        area.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                areaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(buscar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(area, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(184, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(area, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                .addComponent(buscar)
                .addGap(85, 85, 85))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        //buscarBodegas();
        buscarOficinas();
    }//GEN-LAST:event_buscarActionPerformed

    private void areaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_areaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_areaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Bod.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Bod.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Bod.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Bod.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Bod().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField area;
    private javax.swing.JButton buscar;
    // End of variables declaration//GEN-END:variables

/*public void buscarBodegas() {

        area.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                char a = e.getKeyChar();
                if (!((int) a >= 48 && (int) a <= 57)) {
                    e.consume();
                }
            }
        });

        buscar.addActionListener((ActionEvent e) -> {
            if (!area.getText().isEmpty()) {
                double nume;
                ArrayList<domain.Bodega> bodegas = new ArrayList<>();
                nume = Double.parseDouble(area.getText());
                BodegaDAO idao = new BodegaDAO();
                bodegas = (ArrayList<domain.Bodega>) idao.buscarBodegaPorDimension(nume);
                if (bodegas.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "No tenemos propiedades con estas caracteristicas");
                } else {
                    listarBodegas(bodegas);
                }
            } else {
                JOptionPane.showMessageDialog(null, "No puedes dejar el campo vacio");
            }
        });
    } 
    
public void listarBodegas(ArrayList<domain.Bodega> bodegas) {
        int i = 50;
        JFrame ventana = new JFrame("Lista de bodegas");
        JButton tra = new JButton("Agensar cita");
        ventana.setSize(1000, 500);
        ventana.setVisible(true);
        ventana.setLocationRelativeTo(null);
        ventana.setLayout(null);
        ventana.add(tra);
        for (int j = 0; j < bodegas.size(); j++) {
            JLabel cosas = new JLabel("Precio de la propiedad: " + bodegas.get(j).getCosto() + "-->"
                    + "Zona: " + bodegas.get(j).getUbicacion() + "-->"
                    + "Metros cuadrados construidos: " + bodegas.get(j).getMetrosConstruidos()+ "-->"
                    +"Metros cuadrados totales: " + bodegas.get(j).getMetrosTotales());
            cosas.setBounds(10, i, 900, 50);
            cosas.setVisible(true);
            ventana.add(cosas);
            i = i + 60;
        }
        tra.setBounds(400, i, 100, 50);
        tra.addActionListener((ActionEvent e) -> {
            ventana.dispose();
        });
 }*/
    
 public void buscarOficinas(){
        
        area.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                char a = e.getKeyChar();
                if (!((int) a >= 48 && (int) a <= 57)) {
                    e.consume();
                }
            }
        });

        buscar.addActionListener((ActionEvent e) -> {

            if (!area.getText().isEmpty()) {
                double nume;
                ArrayList<domain.Oficina> oficinas = new ArrayList<>();
                nume = Double.parseDouble(area.getText());
                OficinaDAO idao = new OficinaDAO();
                oficinas = (ArrayList<domain.Oficina>) idao.buscarOficinaPorDimension(nume);
                if (oficinas.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "No tenemos propiedades con estas caracteristicas");
                } else {
                    listarOficinas(oficinas);
                }
            } else {
                JOptionPane.showMessageDialog(null, "No puedes dejar el campo vacio");
            }
        });
        
    }
    
    public void listarOficinas(ArrayList<domain.Oficina> oficinas) {
        int i = 50;
        JFrame cho = new JFrame("Lista de oficinas");
        JButton trat = new JButton("Hacer trato");
        cho.setSize(1000, 500);
        cho.setVisible(true);
        cho.setLocationRelativeTo(null);
        cho.setLayout(null);
        cho.add(trat);
        for (int j = 0; j < oficinas.size(); j++) {
            JLabel cosas = new JLabel("Precio de la propiedad: " + oficinas.get(j).getCosto() + "-->"
                    + "Zona: " + oficinas.get(j).getUbicacion() + "-->"
                    + "Metros cuadrados construidos: " + oficinas.get(j).getMetrosConstruidos()+ "-->"
                    +"Metros cuadrados totales: " + oficinas.get(j).getMetrosTotales());
            cosas.setBounds(10, i, 900, 50);
            cosas.setVisible(true);
            cho.add(cosas);
            i = i + 60;
        }
        
    }
}
